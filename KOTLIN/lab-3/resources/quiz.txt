Question: How do you declare a map in Kotlin?
Correct: a
a: mapOf()
b: mutableMapOf()
c: hashMapOf()
d: arrayMapOf()

Question: Which of the following is true about Kotlin's data class?
Correct: a
a: It automatically provides equals(), hashCode(), and toString() methods
b: It does not allow mutable properties
c: It automatically provides a constructor for each property
d: It cannot have primary constructors

Question: Which of the following is not a valid data type in Kotlin?
Correct: a
a: long
b: short
c: double
d: char

Question: How do you define an anonymous function in Kotlin?
Correct: b
a: fun(a: Int) { return a * 2 }
b: {a: Int -> return a * 2}
c: { return a * 2 }
d: a * 2 -> {}

Question: What is the keyword used to inherit a class in Kotlin?
Correct: d
a: open
b: extends
c: inherits
d: super

Question: What is the default visibility modifier for classes in Kotlin?
Correct: a
a: public
b: private
c: protected
d: internal

Question: Which of the following is a collection type in Kotlin?
Correct: b
a: string
b: list
c: int
d: boolean

Question: How do you declare a read-only property in Kotlin?
Correct: c
a: var
b: val
c: const
d: let

Question: What is the result of the expression `1..5` in Kotlin?
Correct: a
a: A range from 1 to 5
b: An array containing [1, 5]
c: A list containing [1, 2, 3, 4]
d: An object of type Range

Question: Which function is used to start the main thread in Kotlin?
Correct: b
a: mainThread()
b: runBlocking()
c: startThread()
d: newThread()

Question: How do you create a nullable type in Kotlin?
Correct: c
a: string?
b: string!
c: string
d: string??

Question: What is the purpose of the `data` keyword in Kotlin?
Correct: a
a: To declare a data class
b: To create a regular class
c: To define an interface
d: To implement an abstract class

Question: Which of the following keywords is used for exception handling in Kotlin?
Correct: b
a: catch
b: try
c: handle
d: throw

Question: How do you define a function that takes a variable number of arguments in Kotlin?
Correct: a
a: vararg
b: var
c: arguments
d: all

Question: What is the purpose of the `lateinit` modifier in Kotlin?
Correct: d
a: To initialize a property at runtime
b: To declare a variable without initializing it
c: To create an immutable property
d: To defer the initialization of a non-null property

Question: How do you declare a primary constructor in Kotlin?
Correct: a
a: class MyClass(val x: Int)
b: class MyClass(x: Int)
c: class MyClass(x: Int) { }
d: class MyClass { constructor(x: Int) }

Question: Which keyword is used to create a singleton in Kotlin?
Correct: c
a: object
b: singleton
c: companion
d: interface

Question: How do you access an element in a list by index in Kotlin?
Correct: b
a: list[index]
b: list.get(index)
c: list.at(index)
d: list[index.toInt()]

Question: Which of the following is a higher-order function?
Correct: d
a: function()
b: inlineFunction()
c: lambdaFunction()
d: filter()

Question: What does the `!!` operator do in Kotlin?
Correct: c
a: It allows null values
b: It converts a value to nullable
c: It throws an exception if the value is null
d: It casts a value to a specific type

Question: How do you declare a sealed class in Kotlin?
Correct: b
a: class MyClass
b: sealed class MySealedClass
c: interface MySealedClass
d: open class MySealedClass

Question: Which of the following can be a constructor in Kotlin?
Correct: d
a: Primary constructor only
b: Secondary constructor only
c: Any function
d: Both primary and secondary constructors

Question: How do you use an `if` expression as an assignment in Kotlin?
Correct: a
a: val max = if (a > b) a else b
b: val max: if (a > b) a else b
c: val max = (if (a > b) a else b)
d: max = if (a > b) a else b

Question: What is the output of `println("Hello, $name!")` if `name` is a variable?
Correct: c
a: Hello, name!
b: Hello, null!
c: Hello, [value of name]!
d: Hello, $name!

Question: How do you create a custom exception in Kotlin?
Correct: b
a: throw Exception("Custom error")
b: class MyException(message: String) : Exception(message)
c: custom Exception(message: String)
d: MyException(message: String) : Exception()

Question: How do you iterate over a map in Kotlin?
Correct: d
a: for (key in map) {}
b: map.forEach { }
c: map.iterate { }
d: for ((key, value) in map) {}

Question: Which of the following is a built-in type in Kotlin?
Correct: c
a: float64
b: string
c: double
d: character

Question: What is the output of `listOf(1, 2, 3).size`?
Correct: a
a: 3
b: 2
c: 0
d: 1

Question: How do you declare a companion object in Kotlin?
Correct: c
a: companion object MyCompanion {}
b: object MyCompanion {}
c: companion object {}
d: object {}

Question: What is the purpose of the `open` keyword in Kotlin?
Correct: d
a: To finalize a class
b: To declare an interface
c: To prevent inheritance
d: To allow a class to be inherited

Question: How do you define a list in Kotlin?
Correct: a
a: val list = listOf(1, 2, 3)
b: val list: List = [1, 2, 3]
c: val list = List(1, 2, 3)
d: val list = [1, 2, 3]

Question: What is the result of `3 in 1..5`?
Correct: b
a: false
b: true
c: null
d: Exception

Question: How do you declare an interface in Kotlin?
Correct: c
a: class MyInterface {}
b: interface MyInterface {}
c: interface MyInterface
d: abstract class MyInterface {}

